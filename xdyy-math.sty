\NeedsTeXFormat{LaTeX2e}[2017/04/15]
\RequirePackage{expl3}
\RequirePackage{xparse}
\ProvidesPackage{xdyy-math}
  [2022/02/21 v0.0.3 A LaTeX package for some math needs.]


% 加载宏包
\RequirePackage{tikz}               % 绘图
\RequirePackage{varwidth}           % 最小宽度型的minipage
\RequirePackage{extarrows}          % 箭头
\RequirePackage{enumitem}           % 定制list环境
\RequirePackage{amsthm, thmtools}   % 定义定理环境
\RequirePackage{xcolor}
\PassOptionsToPackage{dvipsnames, svgnames, x11names}{xcolor}
\RequirePackage[most]{tcolorbox}    % 彩框
\RequirePackage{manfnt}             % 提供“危险”符号

% 加载tikz的库
\usetikzlibrary{calc}               % 相对位置
\usetikzlibrary{
  decorations.pathmorphing,
  decorations.pathreplacing, 
  decorations.shapes
}
\usetikzlibrary{arrows.meta}        % 箭头
\usetikzlibrary{positioning}        % 相对方位


% 定义定理环境

\ExplSyntaxOn
\declaretheoremstyle
  [
    spaceabove = 6pt,
    spacebelow = 6pt,
    headfont = \normalfont\bfseries,
    notefont = \mdseries, 
    notebraces = {(}{)},
    bodyfont = \ttfamily,
    % bodyfont = \itshape,
    headpunct = {},
    postheadspace = 1em,
  ]
  {withoutcounterstyle}

\cs_new:Npn \__xdyymath_declare_theorem_with_counter:n #1
  {
    \declaretheorem
      [
        name =  \clist_item:nn {#1} {1} ,
        refname = \clist_item:nn {#1} {2} ,
        within = \clist_item:nn {#1} {3} ,
      ]
      { \clist_item:nn {#1} {4} }
  }
\cs_new:Npn \__xdyymath_declare_theorem_without_counter:n #1
  {
    \declaretheorem
      [
        name =  \clist_item:nn {#1} {1} ,
        refname = \clist_item:nn {#1} {2},
        numbered = no,
        % headpunct = {},
        style = withoutcounterstyle
      ]
      { \clist_item:nn {#1} {3} }
  }
\clist_map_function:nN
  {
    { 定义, 定义, section, definition },
    { 定理, 定理, section, theorem },
    { 例, 例, section, example },
    { 性质, 性质, section, property },
    { 命题, 命题, section, proposition },
    { 推论, 推论, section, corollary },
    { 引理, 引理, section, lemma },
    { 公理, 公理, section, axiom },
    { 反例, 反例, section, antiexample },
    { 猜想, 猜想, section, conjecture },
    { 问题, 问题, section, question },
  }\__xdyymath_declare_theorem_with_counter:n
\clist_map_function:nN
  {
    {
      { \color{ red } \textdbend 注 },
      注,
      remark 
    },
    { { \color{ teal } \mantriangleright 提示 }, 提示, hint },
    { { \color{ red!70!white } \manstar 总结  }, 总结, summary },
    {
      { \color{ -red!75!green!50 }  \manerrarrow 分析 },
      分析,
      analysis 
    }
  }\__xdyymath_declare_theorem_without_counter:n

\tcolorboxenvironment{remark}
  {
    enhanced~jigsaw, 
    parbox = false,
    breakable,
    boxrule = 0.2pt,
    colback = pink!10,
    left = 2mm,
    bottom = 6mm,
    right = 2mm,
  }
\ExplSyntaxOff


% 多种方法: method环境
\newlist{method}{enumerate}{1}
\setlist[method, 1]
  {
    label = {\bfseries Method \Roman*.},
    labelindent = !,
    labelwidth  = 1.3cm,
    labelsep*   = 0.5em,
    leftmargin  = 2.2cm
  }
% 分类讨论: case环境
\newlist{case}{enumerate}{2}
\setlist[case, 1]
  {
    label = {\bfseries Case \arabic*.},
    % labelindent=-3em ,labelwidth=1.3cm, labelsep*=1em, leftmargin=20pt
    labelindent = !,
    labelwidth  = 1.3cm,
    labelsep*   = 0.5em,
    leftmargin  = 1.7cm
    % labelindent=\parindent, leftmargin=0pt, widest=0, itemindent=*
  }
\setlist[case, 2]
  {
    label = {\bfseries Subcase \arabic{casei}.\arabic*.},
    % labelindent=-1em ,labelwidth=1.3cm, labelsep*=1em, leftmargin =20pt
    labelindent = -0.5em,
    labelwidth  = 1.3cm,
    labelsep*   = 0.5em,
    leftmargin  = 0cm
  }
% 分步: step环境
\newlist{step}{enumerate}{2}
\setlist[step, 1]
  {
    label = {\bfseries Step \arabic*.},
    labelindent = !,
    labelwidth  = 1.3cm,
    labelsep*   = 0.5em,
    leftmargin  = 1.7cm
    % labelindent=\parindent, leftmargin = 0pt, widest = 0, itemindent = *
  }
\setlist[step, 2]
  {
    label       =  {\bfseries Substep \arabic{stepi}.\arabic*.},
    labelindent = -0.5em,
    labelwidth  = 1.3cm,
    labelsep*   = 0.5em, 
    leftmargin  = 0cm
  }


\ExplSyntaxOn


% 思路推导命令\deduce[<key-value>]{<left>}{<right>}

% leftbrace到arrow的距离
\dim_new:N \l__deduce_leftbrace_to_arrow_dim
% arrow与rightbrace的距离
\dim_new:N \l__deduce_arrow_to_rightbrace_dim
% rightbrace到rightarrow的额外水平移动量
\dim_new:N \l__deduce_rightbrace_to_rightbox_horizontal_distance_dim

\bool_new:N \l__deduce_leftbrace_show_bool
\bool_new:N \l__deduce_rightbrace_show_bool

\tl_new:N \l__deduce_arrow_tl
\tl_new:N \l__deduce_leftbox_align_tl
\tl_new:N \l__deduce_rightbox_align_tl

%%%% 自定义函数，简化代码 %%%%
% \__check_align:n
% 效果：用来实现左右对齐与居中
% 参数：center, left, right其中一个
% 函数编写原因：deduce命令的左右box都是用varwidth环境包裹了，直接用node的align失效了，需要“深入varwidth环境内部”产生对齐效果，但是左右两边的判断是一样的，所以就编写了一个函数来减少代码量

\cs_new:Npn \__check_align:n #1
  {
    \str_case:nn {#1}
      {
        { left }   { \raggedright }
        { right }  { \raggedleft }
        { center } { \centering }
      }
  }
% 产生\__check_align:n的V变体，使得参数可以为tl变量而不是{}
\cs_generate_variant:Nn \__check_align:n {V}
\cs_new:Npn \__check_enumerate_itemize:nnn #1#2#3
  {
    \str_if_in:nnTF {#1} {enumerate}
      {#2}
      {
        \str_if_in:nnTF {#1} {itemize}
        {#2}
        {#3}
      }
  }


\keys_define:nn { xdyy-math / deduce }
  {
    % 中间箭头样式
    arrow .tl_set:N = \l__deduce_arrow_tl,
    arrow .initial:n = $\Longrightarrow$,
    % 左边box的对齐方式
    leftbox-align .tl_set:N = \l__deduce_leftbox_align_tl,
    leftbox-align .initial:n = right,
    % 右边box的对齐方式
    rightbox-align .tl_set:N = \l__deduce_rightbox_align_tl,
    rightbox-align .initial:n = left,
    % 是否显示左边的括号
    show-leftbrace .bool_set:N = \l__deduce_leftbrace_show_bool,
    show-leftbrace .initial:n = true,
    % 是否显示右边的括号
    show-rightbrace .bool_set:N = \l__deduce_rightbrace_show_bool,
    show-rightbrace .initial:n = true,
    % leftbrace到arrow的距离
    leftbrace-to-arrow .dim_set:N = \l__deduce_leftbrace_to_arrow_dim,
    leftbrace-to-arrow .initial:n = 7pt,
    % arrow到rightbrace的距离
    arrow-to-rightbrace .dim_set:N = \l__deduce_arrow_to_rightbrace_dim,
    arrow-to-rightbrace .initial:n = 2pt,
    % rightbrace到rightarrow的额外水平移动量
    rightbrace-to-rightbox .dim_set:N = \l__deduce_rightbrace_to_rightbox_horizontal_distance_dim,
    rightbrace-to-rightbox .initial:n = 3mm,
  }


\NewDocumentCommand { \deduce } { O{} +m +m }
  {
    \group_begin:
      \__check_enumerate_itemize:nnn {#2}
        {
          \bool_set_true:N \l__deduce_leftbrace_show_bool
          \keys_set:nn { xdyy-math / deduce }
            {
              leftbrace-to-arrow = 3.5mm
            }
        }
        {
          \bool_set_false:N \l__deduce_leftbrace_show_bool
          \keys_set:nn { xdyy-math / deduce }
            {
              leftbrace-to-arrow = 1pt
            }
        }
      \__check_enumerate_itemize:nnn {#3}
        {
          \bool_set_true:N \l__deduce_rightbrace_show_bool
        }
        {
          \bool_set_false:N \l__deduce_rightbrace_show_bool
        }
      \keys_set:nn { xdyy-math / deduce } {#1}
      \begin{tikzpicture}
        \node [] (leftbox)
          {
            \begin{varwidth}{\hsize}
              % 内部产生对齐效果
              \__check_align:V \l__deduce_leftbox_align_tl
              #2
            \end{varwidth}
          };
        \node[right = \l__deduce_leftbrace_to_arrow_dim~of~leftbox] (arrow)
          {
            \tl_use:N \l__deduce_arrow_tl
          };
        \node
          [
            right = \l__deduce_arrow_to_rightbrace_dim~of~arrow,
            % draw
          ] (rightbox)
          {
            \begin{varwidth}{\hsize}
              % 内部产生对齐效果
              \__check_align:V \l__deduce_rightbox_align_tl
              #3
            \end{varwidth}
          };
        \bool_if:NT \l__deduce_leftbrace_show_bool
          {
            \draw
              [
                decorate,
                decoration = { brace, amplitude = 5pt }
              ]
              (leftbox.north~east) -- (leftbox.south~east) ;
          }
          \bool_if:NT \l__deduce_rightbrace_show_bool
          {
            \draw
              [
                decorate,
                decoration = { brace, mirror, amplitude = 5pt},
              ]
              ([xshift = \l__deduce_rightbrace_to_rightbox_horizontal_distance_dim]rightbox.north~west) -- ([xshift = \l__deduce_rightbrace_to_rightbox_horizontal_distance_dim]rightbox.south~west) ;
          }
      \end{tikzpicture}
    \group_end:
  }


% overlay命令，实现符号叠加


\keys_define:nn { xdyy-math / overlay }
  {
    % 内容
    below-label .tl_set:N = \l__xdyymath_overlay_below_label_tl,
    below-label .initial:n = {$\Longleftrightarrow$},
    above-label .tl_set:N = \l__xdyymath_overlay_above_label_tl,
    above-label .initial:n = {?},
    % 颜色
    below-color .tl_set:N = \l__xdyymath_overlay_below_color_tl,
    below-color .initial:n = black,
    above-color .tl_set:N = \l__xdyymath_overlay_above_color_tl,
    above-color .initial:n = black,
    % anchor
    below-anchor .tl_set:N = \l__xdyymath_overlay_below_anchor_tl,
    below-anchor .initial:n = south,
    above-anchor .tl_set:N = \l__xdyymath_overlay_above_anchor_tl,
    above-anchor .initial:n = base,
    % 移动
    below-vsep .dim_set:N = \l__xdyymath_overlay_below_vsep_dim,
    below-vsep .initial:n = 0pt,
    above-vsep .dim_set:N = \l__xdyymath_overlay_above_vsep_dim,
    above-vsep .initial:n = 0pt,
    below-hsep .dim_set:N = \l__xdyymath_overlay_below_hsep_dim,
    below-hsep .initial:n = 0pt,
    above-hsep .dim_set:N = \l__xdyymath_overlay_above_hsep_dim,
    above-hsep .initial:n = 0pt,
    % scale
    below-scale .fp_set:N = \l__xdyymath_overlay_below_scale_fp,
    below-scale .initial:n = 1,
    above-scale .fp_set:N = \l__xdyymath_overlay_above_scale_fp,
    above-scale .initial:n = 1,
  }


\NewDocumentCommand { \overlay } { O{} }
  {
    % “吃掉前面的空格”
    \unskip
    \group_begin:
      \c_space_tl
      \keys_set:nn { xdyy-math / overlay } {#1}
      \begin{tikzpicture}
        [
          baseline,
          inner~sep = 0pt, outer~sep = 0pt
        ]
        \node
          [
            anchor = \l__xdyymath_overlay_below_anchor_tl,
            scale = \fp_use:N \l__xdyymath_overlay_below_scale_fp
          ]
          at
          (
            \dim_use:N \l__xdyymath_overlay_below_hsep_dim,
            \dim_use:N \l__xdyymath_overlay_below_vsep_dim
          )
          {
            \group_begin:
              \color { \l__xdyymath_overlay_below_color_tl }
              \l__xdyymath_overlay_below_label_tl
            \group_end:
          };
        \node
          [
            anchor = \l__xdyymath_overlay_above_anchor_tl,
            scale = \fp_use:N \l__xdyymath_overlay_above_scale_fp
          ]
          at
          (
            \dim_use:N \l__xdyymath_overlay_above_hsep_dim,
            \dim_use:N \l__xdyymath_overlay_above_vsep_dim
          )
          {
            \group_begin:
              \color { \l__xdyymath_overlay_above_color_tl }
              \l__xdyymath_overlay_above_label_tl
            \group_end:
          };
      \end{tikzpicture}
      \c_space_tl
    \group_end:
    % “吃掉后面的空格”
    \ignorespaces
  }




% \NewDocumentCommand{\set}{+m +m}{
%     \left\{ \,\, #1 :  #2 \,\right\} 
% }

% \tl_new:N \l__emph_color_tl
% \keys_define:nn {emph}{
%     color . tl_set:N = \l__emph_color_tl,
%     color . initial:n = red!90 ,
%     color . default:n = red!90 ,
% }
% % \renewcommand{\emph}[1]{
% %   \if_mode_math: \textcolor{red}{\mathbf{#1}}
% %   \else:
% %   \textbf{\textcolor{red}{#1}}
% %   \fi
% % }

% \NewDocumentCommand{\emphasize}{O{} +m}{
%     \group_begin:
%     \keys_set:nn {emph} {#1}
%     % \if_mode_math: \textcolor{\tl_use:N\l__emph_color_tl}{\mathbf{#2}}
%     \if_mode_math: \textcolor{\tl_use:N\l__emph_color_tl}{#2}
%     \else:
%     \textbf{\textcolor{\tl_use:N\l__emph_color_tl}{#2}}
%     \fi
%     % \keys_set:nn {emph} {color}
%     \group_end:
% }

% \newcommand{\st}{
%   \if_mode_math: \text{\,\,s.t.\,\,}
%   \else:
%   \,s.t.\,\,
%   \fi
% }

% \renewcommand{\ae}{
%   \if_mode_math: \text{\,\,a.e.\,\,}
%   \else:
%   \,a.e.\,\,
%   \fi
% }

% \newcommand{\ie}{
%   \if_mode_math: \text{\,\,i.e.\,\,}
%   \else:
%   \,i.e.\,\,
%   \fi
% }

% \newcommand{\mathtext}[1]{
%     \text{\,#1\,}
% }

% \newcommand{\pie}{^{\prime}} %pie=撇
% \newcommand{\zj}{\ensuremath{\subset}} %zj=子集
% \newcommand{\so}{\ensuremath{\Rightarrow}} %so=所以，因此，推出
% \newcommand{\So}{\ensuremath{\Longrightarrow}} %so=所以，因此，推出
% \newcommand{\equi}{\ensuremath{\Longleftrightarrow}}%equi=equivalent等价
% \newcommand{\kj}{\ensuremath{\varnothing}} %kj=空集
% \newcommand{\dx}{\dd x}
% \newcommand{\dy}{\dd y}
% \newcommand{\dt}{\dd t}
% \newcommand{\C}{\ensuremath{\symbb{C}}}
% \newcommand{\R}{\ensuremath{\symbb{R}}}
% \newcommand{\Q}{\ensuremath{\symbb{Q}}}
% \newcommand{\K}{\ensuremath{\symbb{K}}}
% \newcommand{\Z}{\ensuremath{\symbb{Z}}}
% \newcommand{\N}{\ensuremath{\symbb{N}}}
% \newcommand{\cO}{\ensuremath{\symcal{O}}}
% \newcommand{\cN}{\ensuremath{\symcal{N}}}
% \newcommand{\cH}{\ensuremath{\symcal{H}}}
% \newcommand{\cA}{\ensuremath{\symcal{A}}}
% \newcommand{\cB}{\ensuremath{\symcal{B}}}
% \newcommand{\cC}{\ensuremath{\symcal{C}}}
% \newcommand{\cK}{\ensuremath{\symcal{K}}}
% \newcommand{\cJ}{\ensuremath{\symcal{J}}}
% \newcommand{\cF}{\ensuremath{\symcal{F}}}
% \newcommand{\cG}{\ensuremath{\symcal{G}}}
% \newcommand\Rn{\mathbb{R}^n}
% \newcommand{\lrangle}[2]{\langle#1,#2\rangle}
% \newcommand{\generatedgroup}[1]{\langle#1\rangle} % generated group by a set, used in algebra
% \newcommand{\sufficient}{($\Leftarrow$)} % sufficient condition
% \newcommand{\necessary}{($\Rightarrow$)} % necessary condition
% \newcommand{\closure}[1]{\bar{#1}} % the closure of a set
% \newcommand{\almosteverywhere}{\;\mathrm{a.e.}}
% \newcommand{\diag}{\mathrm{diag}}
% \newcommand{\innerp}[2]{\left\langle#1,#2\right\rangle}
% \newcommand{\conjugate}[1]{\overline{#1}}
% \newcommand{\cont}[1]{\mathrm{Cont}(#1)}
% \newcommand{\id}{\mathrm{id}}
% % \newcommand{\abs}[1]{\ensuremath{\left| #1 \right| }}
% % \newcommand{\norm}[1]{\ensuremath{\left\| #1 \right\|}}
% \newcommand{\tabs}[1]{\ensuremath{\lvert #1\rvert}}
% \newcommand{\tnorm}[1]{\ensuremath{\lVert #1\rVert}}
% \newcommand{\weakto}{\ensuremath{\overset{w.}{\longrightarrow}}}
% \newcommand{\sweakto}{\ensuremath{\overset{\Star{w.}}{\longrightarrow}}}
% \newcommand{\sgn}{\mathrm{sgn}\,}
% \newcommand{\sssum}{\ensuremath{{\scriptscriptstyle\sum}}}
% \newcommand{\Gd}{\ensuremath{\G_{\delta}}}
% \newcommand{\Star}[1]{#1^{*}}
% %声明数学operator
% \DeclareMathOperator{\rad}{rad}
% \DeclareMathOperator{\diam}{diam}
% \DeclareMathOperator{\fin}{fin}
% \DeclareMathOperator{\esssup}{ess\,sup}
% \DeclareMathOperator{\conv}{Conv}
% \DeclareMathOperator{\Span}{span} %% 因为\span已经在宏中定义, 这里使用大写的\Span来表示线性张成
% % \DeclareMathOperator{\cont}{Cont} %% 表示函数的连续点
% % \DeclareMathOperator{\supp}{supp}
% % \DeclareMathOperator{\diag}{diag}
% \DeclareMathOperator{\codim}{codim}
% \DeclareMathOperator{\convba}{Convba}
% \DeclareMathOperator{\Image}{Im}
% \newcommand{\dif}{\mathop{}\!\mathrm{d}}
% \newcommand{\diff}{\mathop{}\!\mathrm{d}}
% \newcommand{\du}{\mathop{}\!\mathrm{d}\mu}
% % \newcommand{\lrangle}[2]{\langle #1, #2 \rangle}
% \renewcommand{\div}{\operatorname{div}}
% \newcommand{\e}{\mathrm{e}}
% \newcommand{\T}{\mathrm{T}}
% \newcommand{\ii}{\mathrm{i}}
% % Differential Operator(在多种实现方法之中，个人认为此方法最佳)
% % \newcommand{\diff}{\mathop{}\!\mathrm{d}}
% % Declare Math Operator
% % \DeclareMathOperator{\codim}{codim}
% % \DeclareMathOperator{\conv}{conv}
% % \DeclareMathOperator{\diam}{diam} % diameter
% % \DeclareMathOperator{\rank}{rank}
% % \DeclareMathOperator{\sgn}{sgn}
% \DeclareMathOperator{\spt}{spt} % support set
% \DeclareMathOperator{\supp}{supp} % another support set
% \DeclareMathOperator{\lcm}{lcm} % least common multiple
% % \DeclareMathOperator{\Span}{span}
% % Real and Imaginary part of complex numbers
% \renewcommand{\Re}{\operatorname{Re}}
% \renewcommand{\Im}{\operatorname{Im}}
% % \newommand{\Deltaeq}{\xlongequal{\Delta}}


\ExplSyntaxOff